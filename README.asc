iPXE README File

Quick start guide:

   cd src
   make

For any more detailed instructions, see http://ipxe.org

### Metal/HPCaaS

#### Binary

For high-performance computer clusters the iPXE source can be built with the
following options:

    cd src
    make bin-x86_64-efi-sb/ipxe.efi CONFIG=metal

The provided cray-metal-ipxe RPM will install the compiled `ipxe.efi` files
into `/var/www/boot`. These will be owned by the UID of `dnsmasq`, and the
GID of `tftp`.

###### Includes/Toggles

> For more information, see the `README` in `src/config/metal`.

- https://ipxe.org/buildcfg/vlan_cmd[VLAN] command
- https://ipxe.org/buildcfg/ntp_cmd[NTP] command
- https://ipxe.org/buildcfg/time_cmd[TIME] command
- https://ipxe.org/buildcfg/pci_cmd[PCI_CMD] command
- https://ipxe.org/buildcfg/REBOOT_CMD[REBOOT_CMD] command
- https://ipxe.org/buildcfg/neighbour_cmd[NEIGHBOUR] command
- https://ipxe.org/buildcfg/console_cmd[CONSOLE] command
- https://ipxe.org/buildcfg/image_png[IMAGE] command
- https://ipxe.org/buildcfg/image_trust_cmd[IMAGE_TRUST_CMD] command
- https://ipxe.org/buildcfg/nslookup_cmd[NSLOOKUP_CMD] command
- https://ipxe.org/buildcfg/ping_cmd[PING_CMD] command
- https://ipxe.org/buildcfg/console_framebuffer[CONSOLE_FRAMEBUFFER] command

### Signing / SecureBoot

The iPXE binary is unsigned, causing SecureBoot to fail where it is enabled and with working TPMs.

### NIC Discovery

Compiled binary will dump NIC information:
```ipxe
iPXE 1.21.1+ (ga0824) -- Open Source Network Boot Firmware -- http://ipxe.org
Features: DNS HTTP iSCSI TFTP SRP VLAN AoE EFI Menu
====NIC DISCOVERY===================================
net0 MAC b8:59:9f:2b:2e:aa PCI.DeviceID 1013 PCI.VendorID 15b3
net1 MAC b8:59:9f:2b:2e:ab PCI.DeviceID 1013 PCI.VendorID 15b3
net2 MAC b4:2e:99:3b:70:56 PCI.DeviceID 1521 PCI.VendorID 8086
net3 MAC b4:2e:99:3b:70:57 PCI.DeviceID 1521 PCI.VendorID 8086
```

### iPXE Menu

The `script.ipxe` file will display a menu on a node that offers some debugging abilities.

#### Examples

Upon receiving the `ipxe.efi` file the server will boot into the compiled menu. This menu offers some utility, and defaults
to chaining the next endpoint.

The final endpoint will load another script which handles uDev rules for interfaces. This helps facilitate
booting by providing the kernel with inputs to setup exptected NICs ahead of time.

Below is a screenshot of the full flow of the metal iPXE configuration; the pre-boot menu, the boot menu, and a triggered error resulting in a fall-through to disk.

.Scripted Menu (Menu & Fallthrough to next boot option)
[#ipxe-menu-12]
image::./img/menu-fallthrough.png[Menu & Fallthrough to next boot option]
[caption="Figure 2: ", link=./img/menu-fallthrough.png]

The menus have several options, they are explained below:

- `Append Kernel Parameters` : adds `rd.cmdline=ask` to the kernel parameters, and prompts the user for more options to append.
- `Configure Settings` : allows reconfiguration of the iPXE binary itself on-the-fly.
- `Exit to BIOS` : dumps you to the system BIOS.
- `Reboot` : reboots the node
- `Enter iPXE Shell` : opens an iPXE command line, type exit to return to the menu
- `Boot HPC Node` : will start linux

### Contributing Guide

Any change to the built binaries warrants an increase in `.version` file's value.
